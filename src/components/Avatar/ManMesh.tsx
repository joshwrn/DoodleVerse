/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t public/avatar/man-mesh.glb
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Avatar: THREE.Mesh
  }
  materials: {
    ['Wolf3D_Avatar.001']: THREE.MeshStandardMaterial
  }
}

export function ManMesh({
  brushColor,
  ...props
}: { brushColor: string } & JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/avatar/man-mesh.glb') as GLTFResult
  return (
    <group
      scale={30}
      position={[0, -3, 0]}
      rotation={[0, Math.PI, 0]}
      {...props}
      dispose={null}
    >
      <pointLight
        intensity={10}
        distance={30}
        position={[-0.25, 1, 0]}
        color={brushColor ?? '#ffffff'}
      />
      <mesh
        name="Wolf3D_Avatar"
        geometry={nodes.Wolf3D_Avatar.geometry}
        material={materials['Wolf3D_Avatar.001']}
        morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary}
        morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences}
      />
    </group>
  )
}

useGLTF.preload('/avatar/man-mesh.glb')
