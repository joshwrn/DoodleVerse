/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 -t public/avatar/female.glb 
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useDrawStore } from '@/state/settings/draw'

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Avatar: THREE.SkinnedMesh
    Hips: THREE.Bone
  }
  materials: {
    Wolf3D_Avatar: THREE.MeshStandardMaterial
  }
}

type ActionName =
  | 'allGrip_L'
  | 'allGrip_R'
  | 'allOpen_L'
  | 'allOpen_R'
  | 'idle_eyes_2'
  | 'idle_eyes'
  | 'indexDown_L'
  | 'indexDown_R'
  | 'mrpDown_L'
  | 'mrpDown_R'
  | 'pinch_L'
  | 'pinch_R'
  | 'point_L'
  | 'point_R'
  | 'thumbDown_L'
  | 'thumbDown_R'
  | 'thumbsUp_L'
  | 'thumbsUp_R'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Woman(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)
  const { nodes, materials, animations } = useGLTF(
    '/avatar/female.glb'
  ) as GLTFResult
  const { actions } = useAnimations<THREE.AnimationClip>(animations, group)
  useEffect(() => {
    if (!actions) return
    actions['idle_eyes']?.play()
  }, [actions])
  const { brushColor } = useDrawStore((s) => ({
    brushColor: s.color,
  }))
  return (
    <group
      ref={group}
      {...props}
      scale={30}
      position={[0, -7, 10]}
      rotation={[0, Math.PI, 0]}
      dispose={null}
    >
      <pointLight
        intensity={5}
        distance={30}
        position={[-0.25, 1, 0]}
        color={brushColor}
      />
      <group name="Scene">
        <group name="AvatarRoot">
          <primitive object={nodes.Hips} />
          <skinnedMesh
            name="Wolf3D_Avatar"
            geometry={nodes.Wolf3D_Avatar.geometry}
            material={materials.Wolf3D_Avatar}
            skeleton={nodes.Wolf3D_Avatar.skeleton}
            morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary}
            morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences}
          />
        </group>
        p
      </group>
    </group>
  )
}

useGLTF.preload('/avatar/female.glb')
